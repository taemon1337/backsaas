services:
  db:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-backsaas}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./infra/db/init:/docker-entrypoint-initdb.d:ro

  redis:
    image: redis:7
    restart: unless-stopped
    ports:
      - "6379:6379"

  api:
    build:
      context: ./services/api
      dockerfile: Dockerfile.dev
    environment:
      API_ADDR: ${API_ADDR:-:8080}
      CONTROL_PLANE_DSN: ${CONTROL_PLANE_DSN}
      PUBSUB_REDIS_URL: ${PUBSUB_REDIS_URL}
      PLAN_CACHE_SIZE: ${PLAN_CACHE_SIZE:-1000}
    volumes:
      - ./services/api:/app
    ports:
      - "8080:8080"
    depends_on:
      - db
      - redis

  migrator:
    build:
      context: ./services/migrator
      dockerfile: Dockerfile.dev
    environment:
      CONTROL_PLANE_DSN: ${CONTROL_PLANE_DSN}
      MIGRATOR_POLL_INTERVAL: ${MIGRATOR_POLL_INTERVAL:-30s}
    volumes:
      - ./services/migrator:/app
    depends_on:
      - db

  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile.dev
    environment:
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      OIDC_ISSUER_URL: ${OIDC_ISSUER_URL}
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET}
      NEXT_PUBLIC_API_BASE: http://localhost:8080
    volumes:
      - ./apps/web:/app
    ports:
      - "3000:3000"
    depends_on:
      - api

volumes:
  db_data:
